{{ if .Values.components.tetragon.enabled -}}

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: "{{ .Values.global.cluster }}-tetragon-netpol"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ .Values.global.project }}
  source:
    chart: {{ .Values.global.raw.helm.chart }}
    repoURL: {{ default .Values.global.helm.repository .Values.global.raw.helm.repository }}
    targetRevision: {{ .Values.global.raw.helm.targetRevision }}
    helm:
      releaseName: tetragon-netpol
      values: |
        resources:
          - apiVersion: networking.k8s.io/v1
            kind: NetworkPolicy
            metadata:
              name: allow-same-namespace
              namespace: tetragon-system
            spec:
              podSelector: {}
              policyTypes:
                - Ingress
                - Egress
              ingress:
                - from:
                  - podSelector: {}
              egress:
                - to:
                  - podSelector: {}
          - apiVersion: networking.k8s.io/v1
            kind: NetworkPolicy
            metadata:
              name: allow-ingress-from-apiserver-to-tetragon
              namespace: tetragon-system
            spec:
              ingress:
              - from:
                - ipBlock:
                    cidr: {{ required "global.apiServerCidr is required" .Values.global.apiServerCidr | quote }}
                - namespaceSelector:
                    matchLabels:
                      kubernetes.io/metadata.name: kube-system
                  podSelector:
                    matchLabels:
                      app: konnectivity-agent
              podSelector:
                matchLabels: {}
              policyTypes:
              - Ingress
  destination:
    name: {{ .Values.global.cluster }}
    namespace: platform-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true

{{- end }}
