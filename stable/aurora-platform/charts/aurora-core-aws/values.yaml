global:
  helm: {}
    # Override all Helm applications to pull
    # their helm chart from the following
    # repository.
    #
    # You can override specific charts below
    # in the components section.
    # repository: https://myrepo.example.ca

  container: {}
    # Override all applications to pull
    # their container from the following
    # registry.
    #
    # You can override specific charts below
    # in the components section.
    # registry: docker.io

  namespace:
    helm:
      chart:
      targetRevision:
      repository:

  raw:
    helm:
      chart:
      targetRevision:
      repository:

  # Cluster name for the Application targets.
  cluster: in-cluster

  # Which project to place applications in.
  project: aurora-core

  # Ingress Domain
  ingressDomain: example.ca

  # Ingress Class Name
  # ingressClassName: ingress-istio-controller

  # The Azure subscription ID used for the cluster
  # subscriptionId: ""

  # The Azure tenant ID used for the cluster
  # tenantId: ""

  # Load Balancer Subnet Name for all Load Balancers
  # load_balancer_subnet_name: ""

# Role Based Access Control
rbac:
  # Groups and users that should be bound to the platform-admin role.
  # Note: if using AKS with AAD enabled, this is not necessary since admins
  #       will be defined in the configuration.
  platformAdmin:
    groups: []
    users: []
  # Configurations for the platform-operator-daily role.
  # A read-only aggregated role which uses the
  # 'rbac.ssc-spc.gc.ca/aggregate-to-platform-operator-view: "true"'
  # label as the selector.
  platformOperator:
    groups: []
    users: []

# Components
components:
  awsLoadbalancerController:
    enabled: true

    helm: {}
      # chart: aws-load-balancer-controller
      # repository: https://aws.github.io/eks-charts
      # targetRevision: 1.13.4  

    imagePullSecrets: []
    image:
      # registry: public.ecr.aws
      repository: eks/aws-load-balancer-controller
      # tag: v2.13.4
      # pullPolicy: IfNotPresent

    replicas: 2
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi

    nodeSelector:
      kubernetes.io/os: linux
      node.ssc-spc.gc.ca/purpose: system
    tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
    # affinity: {}

    priorityClassName: platform-cluster-medium

    enableCertManager: true
    enableServiceMinitor: true
