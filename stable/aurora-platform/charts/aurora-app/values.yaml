global:
  helm: {}
    # Override all Helm applications to pull
    # their helm chart from the following
    # repository.
    #
    # You can override specific charts below
    # in the components section.
    # repository: https://myrepo.example.ca

  container: {}
    # Override all applications to pull
    # their container from the following
    # registry.
    #
    # You can override specific charts below
    # in the components section.
    # registry: docker.io

  namespace:
    helm:
      chart:
      targetRevision:
      repository:

  raw:
    helm:
      chart:
      targetRevision:
      repository:

  # Cluster name for the Application targets.
  cluster: in-cluster

  # Which project to place applications in.
  project: aurora-app

  # Ingress Domain
  ingressDomain: example.ca

  # Ingress Class Name
  # ingressClassName: ingress-istio-controller

  # The Azure subscription ID used for the cluster
  # subscriptionId: ""

  # The Azure tenant ID used for the cluster
  # tenantId: ""

  # Load Balancer Subnet Name for all Load Balancers
  # load_balancer_subnet_name: ""

data:
  app:
    enabled: true

# Components
components:
  argoController:
    enabled: true

    helm: {}
      # chart: argo-controller
      # repository: https://gccloudone-aurora.github.io/aurora-platform-charts
      # targetRevision: 0.0.1

    imagePullSecrets: []

    image:
      # registry: ghcr.io
      repository: gccloudone-aurora/argo-controller
      # tag: "main"
      # pullPolicy: IfNotPresent

    priorityClassName: platform-cluster-medium

    replicas: 1
    resources: {}
      # limits:
      #   cpu: ""
      #   memory: ""
      # requests:
      #   cpu: ""
      #   memory: ""
    nodeSelector:
      kubernetes.io/os: linux
      node.ssc-spc.gc.ca/purpose: system
    tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          podAffinityTerm:
            topologyKey: kubernetes.io/hostname
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: aurora-controller

    componentsImagePullSecretName: ""

    # The credentials used to access the storage account
    # storageAccount:
    #   name: ""
    #   primaryAccessKey: ""

  argoWorkflow:
    enabled: true

    workflow:
      helm: {}
        # chart: argo-workflows
        # repository: https://argoproj.github.io/argo-helm
        # targetRevision: 0.42.1

      images:
        pullPolicy: IfNotPresent
        pullSecrets: []

      priorityClassName: platform-cluster-critical

      controller:
        image:
          # registry: quay.io
          repository: argoproj/workflow-controller
          # tag: v3.2.4

        replicas: 2
        resources: {}
          # limits:
          #   cpu: ""
          #   memory: ""
          # requests:
          #   cpu: ""
          #   memory: ""
        nodeSelector:
          kubernetes.io/os: linux
          node.ssc-spc.gc.ca/purpose: system
        tolerations:
          - key: CriticalAddonsOnly
            operator: Exists
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: workflow-controller

      executor:
        image:
          # registry: quay.io
          repository: argoproj/argoexec
          # tag: v3.2.4

        resources: {}
          # limits:
          #   cpu: ""
          #   memory: ""
          # requests:
          #   cpu: ""
          #   memory: ""

      server:
        image:
          # registry: quay.io
          repository: argoproj/argocli
          # tag: v3.2.4

        replicas: 2
        resources: {}
          # limits:
          #  cpu: ""
          #  memory: ""
          # requests:
          #  cpu: ""
          #  memory: ""
        nodeSelector:
          kubernetes.io/os: linux
          node.ssc-spc.gc.ca/purpose: system
        tolerations:
          - key: CriticalAddonsOnly
            operator: Exists
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: server

      # The credentials used to access the storage account
      # storageAccount:
      #   name: ""
      #   primaryBlobEndpoint: ""
      #   primaryAccessKey: ""

      # The credentials for the Azure service principal used for SSO
      # sso:
      #   issuerUrl: ""
      #   clientId: ""
      #   clientSecret: ""

  elastic:
    enabled: false

    helm: {}
      # chart: eck-operator
      # repository: https://helm.elastic.co
      # targetRevision: 2.3.0

    imagePullSecrets: []
    image:
      # registry: docker.elastic.co
      repository: eck/eck-operator
      # tag: 2.3.0
      # pullPolicy: IfNotPresent

    replicas: 1
    resources:
      limits:
        cpu: 1
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 150Mi
    nodeSelector:
      kubernetes.io/os: linux
      node.ssc-spc.gc.ca/purpose: system
    tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          podAffinityTerm:
            topologyKey: kubernetes.io/hostname
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: elastic-operator

    priorityClassName: platform-cluster-medium

  istio:
    enabled: true

    imagePullSecrets: []

    base:
      helm: {}
        # chart: base
        # repository: https://istio-release.storage.googleapis.com/charts
        # targetRevision: 1.16.1

    istioCustomResponses:
      helm: {}
        # chart: istio-custom-responses
        # repository: https://gccloudone-aurora.github.io/aurora-platform-charts
        # targetRevision: 0.0.1

    gateway:
      helm: {}
        # chart: istio-ingress-gateway
        # repository:  https://gccloudone-aurora.github.io/aurora-platform-charts
        # targetRevision: 0.0.2

      replicas: 3
      resources: {}
        # limits:
        #  cpu: ""
        #  memory: ""
        # requests:
        #  cpu: ""
        #  memory: ""
      nodeSelector:
        kubernetes.io/os: linux
        node.ssc-spc.gc.ca/purpose: gateway
      tolerations:
        - key: "node.ssc-spc.gc.ca/purpose"
          operator: "Equal"
          value: "gateway"
          effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  istio: general

      # loadBalancerIP: XXX.XX.XX.XX

      additionalDnsNames: []

    ingressIstioController:
      helm: {}
        # chart: ingress-istio-controller
        # repository: https://gccloudone-aurora.github.io/aurora-platform-charts
        # targetRevision: 1.4.0

      image:
        # registry: docker.io
        repository: gccloudone-aurora/ingress-istio-controller
        # tag: "1.4.0"
        # pullPolicy: IfNotPresent

      priorityClassName: platform-cluster-critical

      replicas: 2
      resources: {}
        # limits:
        #   cpu: ""
        #   memory: ""
        # requests:
        #   cpu: ""
        #   memory: ""
      nodeSelector:
        kubernetes.io/os: linux
        node.ssc-spc.gc.ca/purpose: system
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: ingress-istio-controller

    istiod:
      helm: {}
        # chart: istiod
        # repository: https://istio-release.storage.googleapis.com/charts
        # targetRevision: 1.16.1

      image:
        # registry: docker.io
        repository: istio
        # tag: "1.16.1"
        # pullPolicy: IfNotPresent
        # variant: distroless

      resources: {}
        # limits:
        #   cpu: ""
        #   memory: ""
        # requests:
        #   cpu: ""
        #   memory: ""

      pilot:
        image:
          # registry: docker.io
          repository: istio
          # tag: "1.16.1"
          # pullPolicy: IfNotPresent
          # variant: distroless

        replicas: 3
        resources: {}
          # limits:
          #   cpu: ""
          #   memory: ""
          # requests:
          #   cpu: ""
          #   memory: ""
        nodeSelector:
          kubernetes.io/os: linux
          node.ssc-spc.gc.ca/purpose: system
        tolerations:
          - key: CriticalAddonsOnly
            operator: Exists
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    istio: pilot

      proxy:
        image:
          # registry: docker.io
          repository: istio
          # tag: "1.16.1"
          # pullPolicy: IfNotPresent
          # variant: distroless

        resources: {}
          # limits:
          #   cpu: ""
          #   memory: ""
          # requests:
          #   cpu: ""
          #   memory: ""

      priorityClassName: platform-cluster-critical

  kiali:
    enabled: true

    helm: {}
      # chart: kiali-operator
      # repository: https://kiali.org/helm-charts
      # targetRevision: 1.62.0

    imagePullSecrets: []
    image:
      # registry: quay.io
      repository: kiali/kiali-operator
      # tag: v1.62.0
      # pullPolicy: IfNotPresent

    replicas: 1
    resources: {}
      # limits:
      #   cpu: ""
      #   memory: ""
      # requests:
      #   cpu: ""
      #   memory: ""
    nodeSelector:
      kubernetes.io/os: linux
      node.ssc-spc.gc.ca/purpose: system
    tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          podAffinityTerm:
            topologyKey: kubernetes.io/hostname
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: kiali-operator

    instances:
      - name: kiali
        grafana: {}
          # token: abcde12345

    priorityClassName: platform-cluster-medium

  sidecarTerminator:
    enabled: true

    helm: {}
      # chart: sidecar-terminator
      # repository: https://gccloudone-aurora.github.io/aurora-platform-charts
      # targetRevision: 0.0.1

    imagePullSecrets: []

    image:
      # registry: ghcr.io
      repository: gccloudone-aurora/sidecar-terminator
      # tag: "main"
      # pullPolicy: IfNotPresent

    terminator:
      image:
        # registry: docker.io
        repository: alpine

    priorityClassName: platform-cluster-medium

    replicas: 2
    resources: {}
      # limits:
      #   cpu: ""
      #   memory: ""
      # requests:
      #   cpu: ""
      #   memory: ""
    nodeSelector:
      kubernetes.io/os: linux
      node.ssc-spc.gc.ca/purpose: system
    tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          podAffinityTerm:
            topologyKey: kubernetes.io/hostname
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: sidecar-terminator

  solr:
    enabled: false

    helm: {}
      # chart: solr-operator
      # repository: https://solr.apache.org/charts
      # targetRevision: 0.5.1

    imagePullSecrets: []
    image:
      # registry: docker.io
      repository: apache/solr-operator
      # tag: v0.5.1
      # pullPolicy: IfNotPresent

    replicas: 1
    resources: {}
      # limits:
      #   cpu: ""
      #   memory: ""
      # requests:
      #   cpu: ""
      #   memory: ""
    nodeSelector:
      kubernetes.io/os: linux
      node.ssc-spc.gc.ca/purpose: system
    tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          podAffinityTerm:
            topologyKey: kubernetes.io/hostname
            labelSelector:
              matchLabels:
                technology: solr-cloud

    zookeeper:
      image:
        # registry: docker.io
        repository: pravega/zookeeper-operator
        # tag: 0.2.14
        # pullPolicy: IfNotPresent

      hooks:
        image:
          # registry: docker.io
          repository: lachlanevenson/k8s-kubectl
          # tag: v1.23.2
          # pullPolicy: IfNotPresent

      resources: {}
        # limits:
        #   cpu: ""
        #   memory: ""
        # requests:
        #   cpu: ""
        #   memory: ""
      nodeSelector:
        kubernetes.io/os: linux
        node.ssc-spc.gc.ca/purpose: system
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  technology: zookeeper

    priorityClassName: platform-cluster-medium

rbac:
  # Groups and users that should be bound to the platform-admin role.
  # Note: if using AKS with AAD enabled, this is not necessary since admins
  #       will be defined in the configuration.
  platformAdmin:
    groups: []
    users: []
  # Configurations for the platform-operator-daily role.
  # A read-only aggregated role which uses the
  # 'rbac.ssc-spc.gc.ca/aggregate-to-platform-operator-view: "true"'
  # label as the selector.
  platformOperator:
    groups: []
    users: []
